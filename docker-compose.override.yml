version: '3.4'

services:
  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
        - "5672:5672"
        - "15672:15672"

  bookmanagement.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672"
      - ASPNETCORE_HTTP_PORTS=8084
    depends_on:
      - rabbitmq
    ports:
      - "8084"
 
  orderdb:
    container_name: orderdb
    environment:
        SA_PASSWORD: "SwN12345678"
        ACCEPT_EULA: "Y"
    restart: always
    ports:
        - "1433:1433"

  order.api:
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - "ConnectionStrings:OrderConnectionString=Server=orderdb;Database=OrderDb;User Id=sa;Password=SwN12345678"            
        - "EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672"
        - "ElasticConfiguration:Uri=http://elasticsearch:9200"
        - ASPNETCORE_HTTP_PORTS=8083
    depends_on:
        - orderdb
        - rabbitmq
    ports:
        - "8083"

  search.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
    ports:
      - "8080"
    
  warehousedb:
    container_name: warehousedb
    restart: always
    ports:
        - "27017:27017"
    volumes:
        - mongo_data:/data/db

  warehouse.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings:ConnectionString=mongodb://warehousedb:27017"
      - "ElasticConfiguration:Uri=http://elasticsearch:9200"
      - ASPNETCORE_HTTP_PORTS=8082
    depends_on:
      - warehousedb
      - rabbitmq 
    ports:
      - "8082"
